#include<bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp> 
#include <ext/pb_ds/tree_policy.hpp> 
using namespace std;
using namespace __gnu_pbds;

template<class T> using oset = tree<T,null_type,less<T>,
rb_tree_tag,tree_order_statistics_node_update>;

int main(){
    oset<int> st;
    st.insert(11);
    st.insert(2);
    st.insert(10);              // insert into set
    st.erase(10);               // erase element 10 from set
    cout<<*st.find_by_order(2); // find 2nd largest element ( 0-index ) 
    cout<<st.order_of_key(10);  // number of element smaller than 19

    /*
        sorted in increasing order first element in pair
        oset<pair<int,int>> st;
        st.insert({10,1});   
        cout<<(*st.find_by_order(11)).first;
        cout<<st.order_of_key({10,1});
    */
}
